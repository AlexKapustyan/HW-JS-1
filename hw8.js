// Домашнее задание №8
// Задача №1
// Напишите функцию, которая последовательно выводит в консоль числа от 1 до 20, с интервалом между числами 1000мс. То есть, весь вывод должен занимать 2000мс, в течение которых каждые 1000мс в консоли появляется очередное число.
// Реализовать с помощью setInterval
// Реализовать с помощью setTimeout вместо setInterval

//========================================================================================//

// Задача №2
// Сделать светофор, который "зажигает" красный, желтый, зеленый свет попеременно.
// Написать функцию, которая в качестве аргументов принимает четыре числа.
// Первое число - сколько секунд будет ‘гореть’ красный.
// Второе число - сколько секунд будет ‘гореть’ желтый.
// Третье число - сколько секунд будет ‘гореть’ зеленый.
// Четвёртое число - на сколько будет включен светофор. 
// Функция должна выводить в консоль сообщение ‘Светофор включен’ и запускать таймер для выключения светофора через заданное в качестве четвёртого параметра количество секунд таймер. После выключения светофора, вывести в консоль сообщение ‘Светофор выключен’. В течении времени работы светофора в консоль должны выводится строки ‘зелёный’, ‘жёлтый’, ‘красный’ по очереди с интервалами между цветами переданными в качестве параметров функции для каждого из цветов. (т.е. если зелёному был задан интервал 3 сек., то жёлтый должен ‘загореться’, через 3 сек. после зелёного)

function traficLight(green, yellow, red, time) {
	const times = green + yellow + red;
	let intervalGreen;
	let intervalYellow;
	let intervalRed;
	setTimeout(() => console.log('Светофор включен'), 0)

	setTimeout(() => {
		console.log('green')
		intervalGreen = setInterval(() => { console.log('green') }, times * 1000)
	}, 0)
	setTimeout(() => {
		console.log('yellow')
		intervalYellow = setInterval(() => { console.log('yellow') }, times * 1000)
	}, green * 1000)
	setTimeout(() => {
		console.log('red')
		intervalRed = setInterval(() => { console.log('red') }, times * 1000)
	}, (green + yellow) * 1000)


	let interval = setInterval(() => {
		clearInterval(intervalGreen);
		clearInterval(intervalYellow);
		clearInterval(intervalRed);
		console.log('Светофор выключен');
		clearInterval(interval);
	}, time * 1000)
}
traficLight(2, 2, 2, 12)

//=========================================================================================================//

// Задача №3
// Напишите функцию, которая через prompt, предлагает пользователю сделать ставку (ввести сумму денег, типа ставка на спорт), после ввода числа в prompt, выведите в консоль сообщение ‘Ваша ставка принята’. Сгенерируйте случайное число в диапазоне от -5 до 5. Через 3 секунды выведите сообщение в консоль информацию о том, что он “выиграл” или “проиграл” с такой логикой: если случайное число отрицательное или равно 0 - то он "не угадал" со своей ставкой, выведите в консоль сообщение ‘Вы проиграли. Ваши деньги сгорели.’ Если число положительное, то выведите в консоль сообщение ‘Вы выиграли. Ваш выигрыш составляет { сумма выигрыша }’. Для расчёта суммы выигрыша нужно умножить сумму ставки на случайно сгенерированное число в диапазоне от -5 до 5.
// Задача №4
// Написать конструктор studentsCreator, потомки которого должны иметь собственное свойство attendedСlassesList, массив в котором будет храниться список посещений, и следующие унаследованные свойства:
// setStudentPresent – метод, который принимает дату в формате '2013-03-25' в качестве единственного формального параметра. Этот метод позволяет указать присутствие студента на занятии в определенную дату. Метод должен создавать объект Date и устанавливать в нём день, месяц и год используя строку из аргумента, все остальные значения даты нужно установить в ноль, привести получившийся объект Date к числу равному количеству миллисекунд, прошедших с начала 1970 года до этого числа, запушить это значение в массив attendedСlassesList и вывести в консоль сообщение ‘Студент был успешно отмечен’. Если это значение уже есть в массиве, вывести в консоль сообщение об этом и не пушить этот элемент в массив ещё раз и выводить сообщение в консоль ‘Студент уже был отмечен на эту дату’.
// setStudentTodayPresent - метод, который должен создавать новый объект Date с сегодняшней датой, все остальные значения даты нужно установить в ноль, привести получившийся объект Date к числу равному количеству миллисекунд, прошедших с начала 1970 года до этого числа и запушить это значение в массив и вывести в консоль сообщение ‘Студент был успешно отмечен’. Если это значение уже есть в массиве, вывести в консоль сообщение об этом и не пушить этот элемент в массив ещё раз и выводить сообщение в консоль ‘Студент уже был отмечен на эту дату’. (не принимает аргументов)
// Метод checkAttendInDate – метод, который принимает дату в формате '2013-03-25', приводит к числу равному количеству миллисекунд, прошедших с начала 1970 года до этого числа, и проверяет наличие данного значения в массиве attendedСlassesList. Возвращает true/false.
// Метод showAllVisits – выводит в консоль сообщение ‘Список дат посещения занятий:’ и с новой строки все записи из массива attendedСlassesList в формате ISO (каждый элемент на новой строке).

//================================================================//

// Задача №5
// Дан массив с временными промежутками в которые машина забронирована. Пример массива:
// rangesArray = [
//         {
//           start: '2000-01-23T04:00:00.000+00:00',
//           end: '2000-01-23T07:00:00.000+00:00'
//         },
//         {
//           start: '2000-01-23T09:00:00.000+00:00',
//           end: '2000-01-23T11:00:00.000+00:00'
//         },
//         {
//           start: '2000-01-25T04:00:00.000+00:00',
//           end: '2000-01-25T18:00:00.000+00:00'
//         },
//         {
//           start: '2000-01-27T01:00:00.000+00:00',
//           end: '2000-01-27T03:00:00.000+00:00'
//         }
//         {
//           start: '2000-01-28T03:00:00.000+00:00',
//           end: '2000-01-28T07:000+00:00'
//         },
//         {
//           start: '2000-01-28T10:00:00.000+00:00',
//           end: '2000-01-28T12:00:00.000+00:00'
//         }
// ] 
// Вам нужно написать функцию, которая будет принимать этот массив в качестве аргумента. Результатом работы функции должен быть массив строк. Результирующий массив должен содержать строки для каждой уникальной даты в массиве. Строка должна быть следующего формата:
// Пример строки

// Каждая строка обозначает дату и должна состоять из 24 символов, от 00 до 24. Каждый символ обозначает час, если час – занят, т.е. попадает в один из промежутков массива rangesArray на дату, которую обозначает эта строка, то в строку нужно добавить знак ‘#’, если этот час не попадает ни в один промежуток даты, которую обозначает эта строка, то в строку нужно добавить знак ‘*’. После создания результирующего массива, вывести в консоль все элементы массива (каждый элемент с новой строки) в следующем формате:
// Пример одного элемента:

// Пример результата работы функции в консоли для массива rangesArray:

