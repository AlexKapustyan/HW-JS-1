// Домашнее задание №15



// Задача №1
// Создайте объект phone со следующими полями:
// Name
// Price
// Discount
// Quantity
// Weight
// Значения укачать произвольные. Для нескольких полей задайте значение null.
// Напишите функцию, которая в качестве единственного аргумента принимает объект. Для того, чтобы не изменить значения полученного в аргументах объекта, внутри функции, создайте переменную для копирования объекта и создайте копию полученного в аргументах объекта с использованием метода Object.assign()
// При помощи метода Object.entries() создайте массив с элементами типа: [‘ключ’, ‘значение’]. Отфильтруйте данный массив так, чтобы в нём остались только элементы, у которых ‘значение’ нe равно null. Из отфильтрованного массива создайте объект, который будет состоять только из полей, значение которых не равно null. Функция должна возвращать получившийся объект.
// Вызовите функцию с объектом phone для демонстрации правильной работы функции.
// Реализуйте копирование полученного в аргументах объекта в переменную используя деструктурирующее присваивание. 

const phone = {
	name: 'Iphone 13',
  price: 1200,
  discount: '4%',
  quantity: null,
  weight: null
}

function newInfoPhone(phone) {
  const arr = []
  let newObg = Object.assign({}, phone)
  let array = Object.entries(newObg)
  for (let i = 0; i < array.length; i++) {
    if(array[i][1] !== null) {
      arr.push(array[i])
    }   
  }
  return Object.fromEntries(arr)
}

newInfoPhone(phone)

//деструктурирующее присваивание

function newInfoPhone(phone) {
  const arr = [];
  let { ...newObg } = phone
  let array = Object.entries(newObg)
  for (let i = 0; i <array.length; i++) {
    if(array[i][1] !== null) {
      arr.push(array[i])
    }   
  }
  return Object.fromEntries( arr)
}

newInfoPhone(phone)



//===========================================================================================================================================//




// Задача №2
// Создайте ещё один объект, имя которого будет laptop. Объект должен содержать следующие поля:
// Name
// Price
// Discount
// Width
// Height
// Diagonal
// Значения указать произвольные.
// Напишите функцию, которая в качестве аргументов принимает два объекта. Функция должна найти не совпадающие имена полей двух объектов. Если имена полей первого объекта одинаковы с именами полей второго объекта, вывести true.  Если есть одно поле или более, которые встречается только в одном из двух объектов, вывести массив имен несовпадающих полей.
// Для нахождения массива ключей использовать Object.keys.
// Вызовите функцию с объектами phone и laptop для демонстрации правильной работы функции.

const laptop = {
	name: 'MacBook Air',
  price: 1200,
  discount: '4%',
  width: '304',
  height: '212',
	diagonal: '13.3'
}

function compareObject(obj1, obj2) {
	let arr1 = Object.keys(obj1)
	let arr2 = Object.keys(obj2)

	for(let i = 0; i < arr1.length; i++) {
    if (arr1[i] === arr2[i]) {
			return true
		} else {
			return false

		}
	}

}
compareObject(laptop, laptop)

//====================================================================================================================================================//




// Задача №3
// Напишите функцию, которая в качестве единственного аргумента принимает объект. При помощи метода Object.values() получите массив значений всех полей объекта.
// Произведите проверку полученного массива, если получившийся массив пуст, то функция должна вернуть строку ‘Object is empty’. В ином случаи создайте переменные firstValue, secondValue и restValues и с использованием деструктирующего присваивания установите им следующие значения:
// firstValue – первый элемент массива
// secondValue – второй элемент массива
// restValues – оставшиеся элементы массива.
// Присваивание реализовать одной строкой. Переменной restValues установить дефолтное значение, равное пустому массиву.
// Из созданных переменных (firstValue, secondValue и restValues) создайте объект типа:
// {
//   firstValue: значение переменной firstValue,
//   secondValue: значение переменной secondValue,
//   restValues: значение переменной restValues
// }
// Функция должна возвращать созданный объект с 3-мя полями.
// Вызовите функцию с объектами laptop для демонстрации правильной работы функции.
